@model IdentitySample.Models.DataViewModel

<div id="mdivG">
@using (Html.BeginForm("ReadOHCHR", "data", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal">
        <h4 style="text-align:left;padding-left:16px"><b>Search OHCHR Documents</b> </h4>
        <hr />
        <div class="form-group">
            <label class="control-label col-sm-1" for="Entity" style="font-size:14px !important">Entity Name</label>
            <div class="col-sm-1 col-md-2">
                @(Html.Kendo().AutoCompleteFor(a => a.Entity)
.Name("Entity")
.DataTextField("Entity")
.Filter("contains")
.MinLength(1)
.HtmlAttributes(new { style = "width:100%" })
.DataSource(source =>
{
    source.Read(read =>
    {
        read.Action("ServerFiltering_GetComs", "Helper")
            .Data("onAdditionalData");
    })
    .ServerFiltering(true);
})
                )
            </div>
            <label class="control-label col-sm-1" for="Entity" style="font-size:14px !important">Document Type</label>
            <div class="col-sm-1 col-md-2">
                @(Html.Kendo().AutoCompleteFor(a => a.DocType)
             .Name("DocType")
              .DataTextField("DocType")
              .Filter("contains")
              .MinLength(1)
              .HtmlAttributes(new { style = "width:100%" })
              .DataSource(source =>
              {
                  source.Read(read =>
                  {
                      read.Action("ServerFiltering_GetdocT", "Helper")
                          .Data("onAdditionalData1");
                  })
                  .ServerFiltering(true);
              })
                )
            </div>
            <label class="control-label col-sm-1" for="Entity" style="font-size:14px !important">Document Category</label>
            <div class="col-sm-1 col-md-2">
                @(Html.Kendo().AutoCompleteFor(a => a.Category)
             .Name("Category")
              .DataTextField("Category")
              .Filter("contains")
              .MinLength(1)
              .HtmlAttributes(new { style = "width:100%" })
              .DataSource(source =>
              {
                  source.Read(read =>
                  {
                      read.Action("ServerFiltering_Getcat", "Helper")
                          .Data("onAdditionalData2");
                  })
                  .ServerFiltering(true);
              })
                )
            </div>
            </div>
        <div class="form-group">
            <label class="control-label col-sm-1" for="Entity" style="font-size:14px !important">Original Language</label>
            <div class="col-sm-1 col-md-2">
                @(Html.Kendo().AutoCompleteFor(a => a.Olang)
             .Name("Olang")
              .DataTextField("Olang")
              .Filter("contains")
              .MinLength(1)
              .HtmlAttributes(new { style = "width:100%" })
              .DataSource(source =>
              {
                  source.Read(read =>
                  {
                      read.Action("ServerFiltering_Getolang", "Helper")
                          .Data("onAdditionalData3");
                  })
                  .ServerFiltering(true);
              })
                )
            </div>
        
        
            <label class="control-label col-sm-1" for="Entity" style="font-size:14px !important">Distribution</label>
            <div class="col-sm-1 col-md-2">
                @(Html.Kendo().AutoCompleteFor(a => a.Dist)
.Name("Dist")
.DataTextField("Dist")
.Filter("contains")
.MinLength(1)
.HtmlAttributes(new { style = "width:100%" })
.DataSource(source =>
{
    source.Read(read =>
    {
        read.Action("ServerFiltering_GetDist", "Helper")
            .Data("onAdditionalData4");
    })
    .ServerFiltering(true);
})
                )
            </div>
            <label class="control-label col-sm-1" for="Entity" style="font-size:14px !important">Date</label>
            <div class="col-sm-1 col-md-2">
                @(Html.Kendo().AutoCompleteFor(a => a.Date)
                            .Name("Date")
                            .DataTextField("Date")
                            .Filter("contains")
                            .MinLength(1)
                            .HtmlAttributes(new { style = "width:100%" })
                            .DataSource(source =>
                            {
                                source.Read(read =>
                                {
                                    read.Action("ServerFiltering_GetDate", "Helper")
                                        .Data("onAdditionalData5");
                                })
                                .ServerFiltering(true);
                            })
                )
            </div>
            </div>
        <div class="form-group">
            <label class="control-label col-sm-1" for="Entity" style="font-size:14px !important">Session Number</label>
            <div class="col-sm-1 col-md-2">
                @(Html.Kendo().AutoCompleteFor(a => a.Snum)
                            .Name("Snum")
                            .DataTextField("Snum")
                            .Filter("contains")
                            .MinLength(1)
                            .HtmlAttributes(new { style = "width:100%" })
                            .DataSource(source =>
                            {
                                source.Read(read =>
                                {
                                    read.Action("ServerFiltering_GetSnmu", "Helper")
                                        .Data("onAdditionalData6");
                                })
                                .ServerFiltering(true);
                            })
                )
            </div>
            <label class="control-label col-sm-1" for="Entity" style="font-size:14px !important">Session Date</label>
            <div class="col-sm-1 col-md-2">
                @(Html.Kendo().AutoCompleteFor(a => a.Sdate)
                            .Name("Sdate")
                            .DataTextField("Sdate")
                            .Filter("contains")
                            .MinLength(1)
                            .HtmlAttributes(new { style = "width:100%" })
                            .DataSource(source =>
                            {
                                source.Read(read =>
                                {
                                    read.Action("ServerFiltering_GetSdate", "Helper")
                                        .Data("onAdditionalData7");
                                })
                                .ServerFiltering(true);
                            })
                )
            </div>
            <label class="control-label col-sm-1" for="Entity" style="font-size:14px !important">Agenda Title</label>
            <div class="col-sm-1 col-md-2">
                @(Html.Kendo().AutoCompleteFor(a => a.Atitle)
                            .Name("Atitle")
                            .DataTextField("Atitle")
                            .Filter("contains")
                            .MinLength(1)
                            .HtmlAttributes(new { style = "width:100%" })
                            .DataSource(source =>
                            {
                                source.Read(read =>
                                {
                                    read.Action("ServerFiltering_GetAtitle", "Helper")
                                        .Data("onAdditionalData8");
                                })
                                .ServerFiltering(true);
                            })
                )
            </div>
            </div>

        <div class="form-group">
            <label class="control-label col-sm-1" for="Entity" style="font-size:14px !important">Agenda Number</label>
            <div class="col-sm-1 col-md-2">
                @(Html.Kendo().AutoCompleteFor(a=>a.Anum)
                            .Name("Anum")
                            .DataTextField("Anum")
                            .Filter("contains")
                            .MinLength(1)
                            .HtmlAttributes(new { style = "width:100%" })
                            .DataSource(source =>
                            {
                                source.Read(read =>
                                {
                                    read.Action("ServerFiltering_GetAnum", "Helper")
                                        .Data("onAdditionalData9");
                                })
                                .ServerFiltering(true);
                            })
                )
            </div>
            
            <div >
                <input type="submit" value="Search" class="btn btn-default" id="search" />
            </div>
       
            </div>
    </div>
}
</div>
            <script>
                //$(document).ready(function () {
                //    $("#DataGrid").hide();
                //});
               
                function onAdditionalData6() {
                    return {
                        text: $("#Snum").val()
                    };
                }
                function onAdditionalData8() {
                    return {
                        text: $("#Atitle").val()
                    };
                }
                function onAdditionalData9() {
                    return {
                        text: $("#Anum").val()
                    };
                }
                function onAdditionalData7() {
                    return {
                        text: $("#Sdate").val()
                    };
                }
                function onAdditionalData1() {
                    return {
                        text: $("#Doc").val()
                    };
                }
                function onAdditionalData5() {
                    return {
                        text: $("#Date").val()
                    };
                }
                function onAdditionalData4() {
                    return {
                        text: $("#Dist").val()
                    };
                }
                function onAdditionalData() {
                    return {
                        text: $("#Entity").val()
                    };
                }
                function onAdditionalData2() {
                    return {
                        text: $("#Category").val()
                    };
                }
                function onAdditionalData3() {
                    return {
                        text: $("#Olang").val()
                    };
                }
            </script>

            <br />
            <br />



            @(Html.Kendo().Grid<IdentitySample.Models.DataViewModel>()
    .Name("DataGrid")
    .Columns(columns =>
    {
        columns.Bound(p => p.Entity).Width(200).Filterable(ftb => ftb.Cell(cell => cell.Operator("contains").SuggestionOperator(FilterType.Contains)));
        columns.Bound(p => p.DocType).Width(200).Filterable(ftb => ftb.Cell(cell => cell.Operator("contains").SuggestionOperator(FilterType.Contains)));
        columns.Bound(p => p.Category).Width(200).Filterable(ftb => ftb.Cell(cell => cell.Operator("contains").SuggestionOperator(FilterType.Contains)));
        columns.Bound(p => p.Count).Width(200).Filterable(ftb => ftb.Cell(cell => cell.Operator("contains").SuggestionOperator(FilterType.Contains)));
        columns.Bound(p => p.Prep).Width(200).Filterable(ftb => ftb.Cell(cell => cell.Operator("contains").SuggestionOperator(FilterType.Contains)));
        columns.Bound(p => p.Olang).Width(200).Filterable(ftb => ftb.Cell(cell => cell.Operator("contains").SuggestionOperator(FilterType.Contains)));
        columns.Bound(p => p.Dist).Width(200).Filterable(ftb => ftb.Cell(cell => cell.Operator("contains").SuggestionOperator(FilterType.Contains)));
        columns.Bound(p => p.Date).Width(200).Filterable(ftb => ftb.Cell(cell => cell.Operator("contains").SuggestionOperator(FilterType.Contains)));
        columns.Command(command => command.Custom("ViewDetails").Click("showDetails")).Width(180);
    })
    .Pageable()
    .Sortable()
    .Scrollable()
    .Filterable(ftb => ftb.Mode(GridFilterMode.Row))
    .DataSource(dataSource => dataSource
        .Ajax()
        .ServerOperation(false)
        .PageSize(20)
        .Read(read => read.Action("ReadOHCHR", "data").Data("Extra"))
     )
            )

            @(Html.Kendo().Window().Name("Details")
    .Title("Document Details")
    .Visible(false)
    .Modal(true)
    .Draggable(true)
    .Width(750)
            )

            <script type="text/x-kendo-template" id="template">
               
                <div id="details-container">
                    <h2 style="color:blue">#= Symh #</h2>
                    <br />

                    <h1 style="color:blue">Session Number: </h1>#= Snum #
                    <br />
                    <dt><h4 style="color:blue">Session Date: </h1>#= Sdate #</dt>
                    <br />
                    <dt><h4 style="color:blue">Agenda Item: </h1>#= Atitle #</dt>
                    <br />
                    <dt><h4 style="color:blue">Agenda Number: </h1>#= Anum #</dt>
                    <br />
                    <dt><h4 style="color:blue">Gdoc Num: </h1>#= Gdoc #</dt>
                    <br />
                    <dt><h4 style="color:blue">Translated Languages: </h1>#= Tlang #</dt>

                </div>
            </script>
            <script type="text/javascript">
                function Extra() {
                    return {
                        Category: $("#Category").val(),
                        Entity: $("#Entity").val()
                    }
                }
                $('#search').click(function (e) {
                    //  $("#DataGrid").Show();
                    $("#DataGrid").data("kendoGrid").dataSource.read();
                    //  $("#DataGrid").data("kendoGrid").Refresh();
                });
                var detailsTemplate = kendo.template($("#template").html());

                function showDetails(e) {
                    e.preventDefault();

                    var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
                    var wnd = $("#Details").data("kendoWindow");

                    wnd.content(detailsTemplate(dataItem));
                    wnd.center().open();
                }
            </script>

            @*<style type="text/css">
                    #details-container {
                        padding: 10px;
                    }

                        #details-container h2 {
                            margin: 0;
                        }

                        #details-container em {
                            color: #8c8c8c;
                        }

                        #details-container dt {
                            margin: 0;
                            display: inline;
                        }
                </style>*@
<style>
    /*span.k-widget.k-tooltip-validation {
        display: inline-block;
        float:left;
        width: 160px;
        text-align: left;
        border: 0;
        padding: 0;
        margin: 0;
        background: none;
        box-shadow: none;
        color: red;
    }

    .k-tooltip-validation .k-warning {
        display: none;
    }*/
    #mdiv {
        margin: auto;
        width: 50%;
        padding: 10px;
    }

    #mdivG {
        margin: auto;
        width: 1400px;
        height: auto;
        padding: 0px;
        background-color: #ffffff;
        border: 2px solid #2a6496;
        border-radius: 5px;
        /*background-image: url('/assets/UN-Logo (1).png');
            background-size: 300px 300px;*/
        background-repeat: no-repeat;
        background-position: 90% 30%;
    }


    #mdiv section {
        margin-left: auto;
        margin-right: auto;
        display: block;
    }
</style>