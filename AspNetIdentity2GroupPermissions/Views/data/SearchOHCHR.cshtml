@model IdentitySample.Models.DataViewModel
<br />
<br />
<br />

<div id="mdivG">
    @using (Html.BeginForm("Verify", "ECE", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
    {
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-horizontal">
            <h4 style="text-align:left;padding-left:16px"><b>Template Information*</b> </h4>
            <hr />
 <div class="form-group">
                <label class="control-label col-sm-5" for="Entity" style="font-size:14px !important">Search Committee</label>
                <div class="col-sm-4 col-md-4">
                    @(Html.Kendo().DropDownList()
                      .Name("com_ID")
                      .OptionLabel("Select Committee ....")
                     .HtmlAttributes(new { required = "required", data_required_msg = "Select Committee", style = "width: 100%" })

                      //.Filter("contains")
                      .DataTextField("Name")
                      .DataValueField("Name")
                     .DataSource(source =>
                     {
                         source.Read(read =>
                         {
                             read.Action("GetCascadeCommitteesECE", "Helper");
                         });

                     })

                    )    
                </div>
</div>
            <div class="form-group">
                <label class="control-label col-sm-5" for="DType" style="font-size:14px !important">Document Type*</label>
                <div class="col-sm-4 col-md-4">
                    @(Html.Kendo().DropDownListFor(model => model.Doctype_ID)
                      .Name("Doctype_ID")
                      .OptionLabel("Please Select Document Type ....")
                      .HtmlAttributes(new { required = "required", data_required_msg = "Select Document Type", style = "width: 100%" })
                      .DataTextField("Name")
                      .DataValueField("ID")
                      //.Events(e => e.Select("doctselect"))
                      .DataSource(source =>
                      {
                          source.Read(read =>
                          {
                              read.Action("getcascadedoct", "helper")
                                  .Data("filtercomm");
                          })
                               .ServerFiltering(true);
                      })
                     .Enable(false)
                     .AutoBind(false)
                     .CascadeFrom("com_ID")
                    )
                    <span class="k-invalid-msg" data-for="DType"></span>
                </div>
            </div>
            <div class="form-group">
                <label class="control-label col-sm-5" for="Cat" style="font-size:14px !important">Document Category*</label>
                <div class="col-sm-4 col-md-4">
                    @(Html.Kendo().ComboBoxFor(model => model.Cat)
                      .Name("Cat")
                      //.OptionLabel("Please Select Category....")
                      .Placeholder("Please Select Category....")
                       .HtmlAttributes(new { required = "required", data_required_msg = "Select Category", style = "width: 100%" })
                       .Filter(FilterType.Contains)
                      // .Events(e => e.Open("oncascade"))
                      .DataValueField("CID")
                      .DataTextField("CName")
                      .DataSource(source =>
                      {
                          source.Read(read =>
                          {
                              read.Action("GetCascadeCat", "Helper")
                                  .Data("filterdoct1");
                          })
                          .ServerFiltering(true);
                      })

                      .Enable(false)
                      .AutoBind(false)
                      .CascadeFrom("Doctype_ID")
                    )
                    <span class="k-invalid-msg" data-for="Cat"></span>
                </div>
            </div>

            <div class="form-group">
                <label class="control-label col-sm-5" for="SCat" style="font-size:14px !important">Document SubCategory*</label>
                <div class="col-sm-4 col-md-4">
                    @(Html.Kendo().ComboBoxFor(model => model.SCat)
                      .Name("SCat")
                      //.OptionLabel("Please Select Category....")
                      .Placeholder("Please Select SubCategory....")
                       .HtmlAttributes(new { required = "required", data_required_msg = "Select SubCategory", style = "width: 100%" })
                       .Filter(FilterType.Contains)
                      // .Events(e => e.Open("oncascade"))
                      .DataValueField("SCName")
                      .DataTextField("SCName")
                      .DataSource(source =>
                      {
                          source.Read(read =>
                          {
                              read.Action("GetCascadeSCat", "Helper")
                                  .Data("filtercat");
                          })
                          .ServerFiltering(true);
                      })
                      .Events(e => e.DataBound("onReturn"))
                      .Enable(false)
                      .AutoBind(false)
                      .CascadeFrom("Cat")
                    )
                    <span class="k-invalid-msg" data-for="Cat"></span>
                </div>
            </div>
            <div class="form-group">
                <label class="control-label col-sm-5" for="lang" style="font-size:14px !important">Original Language*</label>
                <div class="col-sm-4 col-md-4">
                    @(Html.Kendo().DropDownListFor(m => m.lang_ID)
                        .Name("lang_ID")
                        .OptionLabel("Select language...")
                        .DataTextField("Name")
                        .DataValueField("ID")
                        .HtmlAttributes(new { required = "required", data_required_msg = "Select Language", style = "width: 100%" })
                        // .Events(e => e.Change("ChangeLang"))
                        .DataSource(source =>
                        {
                            source.Read(read =>
                            {
                                read.Action("GetLanguages", "helper");
                            });

                        }
                        )
                    )
                    <span class="k-invalid-msg" data-for="lang"></span>
                </div>
            </div>

            <div class="form-group">
                <label class="control-label col-sm-5" for="dist" style="font-size:14px !important">Distribution*</label>
                <div class="col-sm-4 col-md-4">
                    @(Html.Kendo().DropDownListFor(m => m.dist)
                        .Name("dist")
                        .OptionLabel("Select distribution")
                        .DataTextField("Name")
                        .DataValueField("ID")
                        .HtmlAttributes(new { required = "required", data_required_msg = "Select Distribution", style = "width: 100%" })
                        .DataSource(source =>
                        {
                            source.Read(read =>
                            {
                                read.Action("GetCascadedist", "helper")
                                   .Data("filterdiste");
                            })
                             .ServerFiltering(true);
                        })
                      .Enable(false)
                      .AutoBind(false)
                      .CascadeFrom("lang_ID")
                    )
                    <span class="k-invalid-msg" data-for="dist"></span>
                </div>
            </div>


            <div class="form-group">
                <label class="control-label col-sm-5" for="date" style="font-size:14px !important">Date*</label>
                <div class="col-sm-4 col-md-4">
                    @(Html.Kendo().DatePickerFor(m => m.date).Name("date").Value(DateTime.Now).HtmlAttributes(new { required = "required", style = "width: 100%" }))
                    <span class="k-invalid-msg" data-for="date"></span>
                </div>
            </div>




            @*<div class="form-group">
                    <div class="col-sm-12 col-md-12">
                        <hr />
                    </div>
                </div>*@
            <div class="form-group">
                <div style="text-align:center">
                    <input type="submit" value="Next" class="btn btn-default" id="next" style="font-size:14px !important" />
                </div>
            </div>

        </div>


    }
</div>

