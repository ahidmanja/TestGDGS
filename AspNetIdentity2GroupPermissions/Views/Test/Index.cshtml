
@model IdentitySample.Models.FinalTempViewModel

@*<div class="wrapper">
    <b style="font-size:medium">Template Information:</b>
    <br />
    <br />
    <div class="first">
        <b style="font-size:small">Template Type:  </b>
    </div>
    <div class="second">
        @(Html.Kendo().DropDownListFor(model => model.temptype_ID)
          .Name("temptype_ID")
          .Filter("Contains")
          .OptionLabel("Please Select Template Type ....")
          .HtmlAttributes(new { style = "width:100%;align-self:center;" })
          .DataTextField("Name")
          .DataValueField("ID")
          .DataSource(source =>
           {
               source.Read(read =>
                 {
                     read.Action("GetTempType", "Helper");
                 });

           })
        )
    </div>
</div>
<div class="wrapper">
    <br />
    <div class="first">
        <b style="font-size:small">
            committee:
        </b>
    </div>
    <div class="second">
        @(Html.Kendo().DropDownListFor(model => model.com_ID)
                  .Name("com_ID")
                  .OptionLabel("Please Select Committee ....")
                  .HtmlAttributes(new { style = "width:100%;align-self:center;" })

                  .Filter("contains")
                  .DataTextField("Name")
                  .DataValueField("ID")
                  .DataSource(source =>
                   {
                       source.Read(read =>
                         {
                             read.Action("getcascadecommittees", "helper")
                              .Data("FilterTempT");
                         })
                           .ServerFiltering(true);
                   })
                  .Enable(false)
                  .AutoBind(false)
                  .CascadeFrom("temptype_ID")
        )
    </div>
</div>
<div class="wrapper">
    <br />
    <div class="first">
        <b style="font-size:small">
            document type:
        </b>
    </div>
    <div class="second">
        @(Html.Kendo().DropDownListFor(model => model.Doctype_ID)
                  .Name("Doctype_ID")
                  .OptionLabel("Please Select Document Type ....")
                  .HtmlAttributes(new { style = "width:100%" })
                  .DataTextField("Name")
                  .DataValueField("ID")
                //.Events(e => e.Select("doctselect"))
                  .DataSource(source =>
                   {
                       source.Read(read =>
                        {
                            read.Action("getcascadedoct", "helper")
                                .Data("filtercomm");
                        })
                            .ServerFiltering(true);
                   })
                 .Enable(false)
                 .AutoBind(false)
                 .CascadeFrom("com_ID")
        )
    </div>
</div>*@
@*<div class="wrapper">
    <br />
    <div class="first">
        <b style="font-size:small">
            categories:
        </b>
    </div>
    <div class="second">
        @(Html.Kendo().DropDownListFor(model => model.Cat_ID)
                  .Name("Cat_ID")
                  .OptionLabel("Please Select Category....")
                  .HtmlAttributes(new { style = "width:100%;align-self:center;" })
                  .Filter("contains")
                // .Events(e => e.Open("oncascade"))
                  .DataValueField("CID")
                  .DataTextField("CName")
                  .DataSource(source =>
                      {
                          source.Read(read =>
                          {
                              read.Action("getcascadecat", "helper")
                                  .Data("filterdoct1");
                          });
                          //.ServerFiltering(false);
                      })
                  //.Enable(false)
                  //.AutoBind(false)
                  //.CascadeFrom("Doctype_ID")
        )
    </div>
</div>
<div class="wrapper">
    <br />
    <div class="first">
        <b style="font-size:small">
            name:
        </b>
    </div>
    <div class="second">
        @Html.Kendo().TextBoxFor(model => model.Name).HtmlAttributes(new { style = "width: 100%;" })
    </div>
</div>
<div class="wrapper">
    <br />
    <div class="first">
        <b style="font-size:small">
            symbole:
        </b>
    </div>
    <div class="second">
        @Html.Kendo().TextBoxFor(model => model.Symbole).HtmlAttributes(new { style = "width: 100%;" })
    </div>
</div>
<div class="wrapper">
    <br />
    <div class="first">
        <b style="font-size:small">
            title:
        </b>
    </div>
    <div class="second">
        @Html.Kendo().TextBoxFor(model => model.Title).HtmlAttributes(new { style = "width: 100%;" })
    </div>
</div>*@

@*<style>
    div.wrapper {
        width: 500px;
        padding-left: 0.5em;
        clear: both;
    }

    div.first {
        padding-left: 0.9em;
        text-align: left;
        width: 100px;
        float: left;
    }

    div.second {
        width: 250px;
        float: left;
    }
</style>*@



@*<script type="text/javascript">
    function oncascade() {
        $("#Cat_ID").data("kendoDropDownList").dataSource.read();
    }

    function doctselect() {
        $("#Cat_ID").data("kendoDropDownList").dataSource.read();
    }
    function FilterTempT() {
        return {
            t: $("#temptype_ID").val()
        };
    }
    function filtercomm() {
        return {
            comm: $("#com_ID").val()
        };
    }
    function filterdoct1() {
        return {
            tt: 8
        };
    }
    function onchange(e) {
        if (e.type == "update") {
            $("#FTemp").data("kendoGrid").dataSource.read();
        }
        if (e.type == "create") {
            $("#FTemp").data("kendoGrid").dataSource.read();
        }
    }
    function error_handler(e) {
        if (e.errors) {
            var message = "Errors:\n";
            $.each(e.errors, function (key, value) {
                if ('errors' in value) {
                    $.each(value.errors, function () {
                        message += this + "\n";
                    });
                }
            });
            alert(message);
        }
    }
</script>*@