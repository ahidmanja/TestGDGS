@model IdentitySample.Models.OHCHRViewModel
<br />
<br />
<br />
<div id="mdivG">
    @using (Html.BeginForm("Verify", "OHCHR", FormMethod.Post, new { @class = "form-horizontal", role = "form"  }))
        {
        @Html.AntiForgeryToken()

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-horizontal">
            <h4 style="text-align:left;padding-left:16px"><b>Template Information*</b> </h4>
            <hr />

                <div class="form-group">

                    <label class="control-label col-sm-5" for="Type" style="font-size:14px !important">Organ*</label>
                    <div class="col-sm-4 col-md-4">
                           @(Html.Kendo().DropDownList()
                          .Name("temptype_ID")
                          .Filter("Contains")
                          .OptionLabel("Please Select Organ ....")
                          .HtmlAttributes(new { required = "required", data_required_msg = "Select Template Type", style = "width: 100%" })
                          .DataTextField("Name")
                          .DataValueField("ID")

                          .DataSource(source =>
                          {
                              source.Read(read =>
                              {
                                  read.Action("GetTempTypeOHCHR", "Helper");
                              });

                          })
                          
                          )
                        <span class="k-invalid-msg" data-for="Type"></span>


                    </div>
                </div>

                <div class="form-group">
                    <label class="control-label col-sm-5" for="Entity" style="font-size:14px !important">Select Entity*</label>
                    <div class="col-sm-4 col-md-4">
                        @(Html.Kendo().DropDownList()
                      .Name("com_ID")
                      .OptionLabel("Please Select Committee ....")
                     .HtmlAttributes(new { required = "required", data_required_msg = "Select Entity", style = "width: 100%" })

                      //.Filter("contains")
                      .DataTextField("Name")
                      .DataValueField("ID")
                      .DataSource(source =>
                      {
                          source.Read(read =>
                          {
                              read.Action("getcascadecommittees", "helper")
                               .Data("FilterTempT");
                          })
                              .ServerFiltering(true);
                      })
                      .Enable(false)
                      .AutoBind(false)
                      .CascadeFrom("temptype_ID")
                        )
                        <span class="k-invalid-msg" data-for="Entity"></span>
                    </div>
                </div>
                <div class="form-group">
                    <label class="control-label col-sm-5" for="DType" style="font-size:14px !important">Document Type*</label>
                    <div class="col-sm-4 col-md-4">
                        @(Html.Kendo().DropDownList()
                      .Name("Doctype_ID")
                      .OptionLabel("Please Select Document Type ....")
                      .HtmlAttributes(new { required = "required", data_required_msg = "Select Document Type", style = "width: 100%" })
                      .DataTextField("Name")
                      .DataValueField("ID")
                      //.Events(e => e.Select("doctselect"))
                      .DataSource(source =>
                      {
                          source.Read(read =>
                          {
                              read.Action("getcascadedoct", "helper")
                                  .Data("filtercomm");
                          })
                               .ServerFiltering(true);
                      })
                     .Enable(false)
                     .AutoBind(false)
                     .CascadeFrom("com_ID")
                        )
                        <span class="k-invalid-msg" data-for="DType"></span>
                    </div>
                </div>
                <div class="form-group">
                    <label class="control-label col-sm-5" for="Cat" style="font-size:14px !important">Document Category*</label>
                    <div class="col-sm-4 col-md-4">
                        @(Html.Kendo().ComboBoxFor(model => model.Cat)
                      .Name("Cat")
                      //.OptionLabel("Please Select Category....")
                      .Placeholder("Please Select Category....")
                       .HtmlAttributes(new { required = "required", data_required_msg = "Select Category", style = "width: 100%" })
                       .Filter(FilterType.Contains)
                      // .Events(e => e.Open("oncascade"))
                      .DataValueField("CID")
                      .DataTextField("CName")
                      .DataSource(source =>
                      {
                          source.Read(read =>
                          {
                              read.Action("GetCascadeCat", "Helper")
                                  .Data("filterdoct1");
                          })
                          .ServerFiltering(true);
                      })
                      .Enable(false)
                      .AutoBind(false)
                      .CascadeFrom("Doctype_ID")
                        )
                        <span class="k-invalid-msg" data-for="Cat"></span>
                    </div>
                </div>
                <div class="form-group">
                    <label class="control-label col-sm-5" for="lang" style="font-size:14px !important">Original Language*</label>
                    <div class="col-sm-4 col-md-4">
                        @(Html.Kendo().DropDownListFor(m => m.lang_ID)
                        .Name("lang_ID")
                        .OptionLabel("Select language...")
                        .DataTextField("Name")
                        .DataValueField("ID")
                        .HtmlAttributes(new { required = "required", data_required_msg = "Select Language", style = "width: 100%" })
                        // .Events(e => e.Change("ChangeLang"))
                        .DataSource(source =>
                        {
                            source.Read(read =>
                            {
                                read.Action("GetLanguages", "helper");
                            });

                        }
                        )
                        )
                        <span class="k-invalid-msg" data-for="lang"></span>
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-sm-6 col-md-6"></div>
                </div>
            <div class="form-group">
                <label class="control-label col-sm-5" for="count" style="font-size:14px !important">Country*</label>
                <div class="col-sm-4 col-md-4">
                    @(Html.Kendo().ComboBoxFor(m => m.count_ID)
                                .Name("count_ID")
                                .Filter("contains")
                                .Placeholder("Select Country...")
                               .HtmlAttributes(new { required = "required", data_required_msg = "Select Country", style = "width: 100%" })
                                .Filter(FilterType.Contains)
                                .DataTextField("Name")
                                .DataValueField("ID")
                                .DataSource(source =>
                                {
                                    source.Read(read =>
                                    {
                                        read.Action("GetCascadeCount", "helper")
                                          .Data("filtercount"); ;
                                    })
                             .ServerFiltering(true);
                                })
                      .Enable(false)
                      .AutoBind(false)
                      .CascadeFrom("lang_ID")
                    )
                </div>
                <span class="k-invalid-msg" data-for="count"></span>
            </div>
                <div class="form-group">
                    <label class="control-label col-sm-5" for="dist" style="font-size:14px !important">Distribution*</label>
                    <div class="col-sm-4 col-md-4">
                        @(Html.Kendo().DropDownListFor(m => m.dist)
                        .Name("dist")
                        .OptionLabel("Select distribution")
                        .DataTextField("Name")
                        .DataValueField("ID")
                        .HtmlAttributes(new { style = "width: 100%" })
                        .DataSource(source =>
                        {
                            source.Read(read =>
                            {
                                read.Action("GetCascadedist", "helper")
                                   .Data("filterdiste");
                            })
                             .ServerFiltering(true);
                        })
                      .Enable(false)
                      .AutoBind(false)
                      .CascadeFrom("lang_ID")
                        )
                        
                    </div>
                </div>


                <div class="form-group">
                    <label class="control-label col-sm-5" for="date" style="font-size:14px !important">Date*</label>
                    <div class="col-sm-4 col-md-4">
                        @(Html.Kendo().DatePickerFor(m => m.date).Name("date").Value(DateTime.Now).HtmlAttributes(new { required = "required", style = "width: 100%" }))
                        <span class="k-invalid-msg" data-for="date"></span>
                    </div>
                </div>




                @*<div class="form-group">
                <div class="col-sm-12 col-md-12">
                    <hr />
                </div>
            </div>*@
                <div class="form-group">
                    <div style="text-align:center">
                        <input type="submit" value="Next" class="btn btn-default" id="next" style="font-size:14px !important" />
                    </div>
                </div>

            </div>

    }
</div>
        <script type="text/javascript">
     
            $(function () {
                $("form").kendoValidator();
            });

            function filtercount() {
                return {
                    t: $("#lang_ID").val(),
                    Filter: $("#count_ID").data("kendoComboBox").input.val()
                };
            }
            function filterdiste() {
                return {
                    t: $("#lang_ID").val()
                };
            }
            //function ChangeLang() {
            //    $("#version1").data("kendoMultiSelect").dataSource.read();
            //}

            function FilterTempT() {
                return {
                    t: $("#temptype_ID").val()
                };
            }
            function filtercomm() {
                return {
                    comm: $("#com_ID").val()
                };
            }
            function filterdoct1() {
                return {
                    tt: $("#Doctype_ID").val(),
                    Filter: $("#Cat").data("kendoComboBox").input.val()
                 //   catfilter: $("#Cat").input.val()
                    // tt:8
                };
            }
            //function onchange(e) {
            //    if (e.type == "update") {
            //        $("#FTemp").data("kendoGrid").dataSource.read();
            //    }
            //    if (e.type == "create") {
            //        $("#FTemp").data("kendoGrid").dataSource.read();
            //    }
            //}
            function error_handler(e) {
                if (e.errors) {
                    var message = "Errors:\n";
                    $.each(e.errors, function (key, value) {
                        if ('errors' in value) {
                            $.each(value.errors, function () {
                                message += this + "\n";
                            });
                        }
                    });
                    alert(message);
                }
            }
        </script>
    <style>
        /*span.k-widget.k-tooltip-validation {
        display: inline-block;
        float:left;
        width: 160px;
        text-align: left;
        border: 0;
        padding: 0;
        margin: 0;
        background: none;
        box-shadow: none;
        color: red;
    }

    .k-tooltip-validation .k-warning {
        display: none;
    }*/
        #mdiv {
            margin: auto;
            width: 50%;
            padding: 10px;
        }

        #mdivG {
            margin: auto;
            width: 800px;
            height: auto;
            padding: 0px;
            background-color: #ffffff;
            border: 2px solid #2a6496;
            border-radius: 5px;
            /*background-image: url('/assets/UN-Logo (1).png');
            background-size: 300px 300px;*/
            background-repeat: no-repeat;
            background-position: 90% 30%;
        }


        #mdiv section {
            margin-left: auto;
            margin-right: auto;
            display: block;
        }
    </style>
